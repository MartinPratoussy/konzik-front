default:
  image: docker:latest
  tags:
    - runner-l

stages:
  - build-project
  - build-image
  - deploy

build:
  image: node:16-alpine
  stage: build-project
  script:
    - mkdir /code
    - cd /code/
    - cp -r $CI_PROJECT_DIR/* /code/
    - npm ci
    - npm run build
    - cd /builds/hllmp/konzik-front
    - ls -l ../../../code/dist/
  artifacts:
    name: vueApp
    paths:
      - ../../../code/dist
  when: manual

build-image:
  stage: build-image
  script:
    #- docker build -t thomasoss/testrepo:latest -f Dockerfile .
    #- dnf install -y qemu-user-static binfmt-support
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - docker buildx create --name builder-user --use
    - docker buildx inspect --bootstrap
    - echo "$DOCKER_PASSWORD" | docker login registry.cpe.granux.fr -u "$DOCKER_USERNAME" --password-stdin
    - docker buildx build --push --platform linux/amd64,linux/arm64,linux/arm/v7 -f Dockerfile -t registry.cpe.granux.fr/hllmp/konzik-front:latest .
  when: manual

deploy-image:
  stage: deploy
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apk add --update openssh )' 
    - eval $(ssh-agent -s)
    - echo "$OVH" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $SERVER >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - ssh $SERVER_USER@$SERVER "echo "$DOCKER_PASSWORD" | docker login registry.cpe.granux.fr -u "$DOCKER_USERNAME" --password-stdin && 
                                docker service update --with-registry-auth --force --image registry.cpe.granux.fr/hllmp/konzik-front:latest runfront_runfront"
  when: manual

  only:
    - master

variables:
  DOCKER_USERNAME: $DOCKER_USERNAME
  DOCKER_PASSWORD: $DOCKER_PASSWORD